{"ast":null,"code":"import _classCallCheck from \"/Users/niharika.singh/Downloads/react-websocket-stock-app-master/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/niharika.singh/Downloads/react-websocket-stock-app-master/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/niharika.singh/Downloads/react-websocket-stock-app-master/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/niharika.singh/Downloads/react-websocket-stock-app-master/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/niharika.singh/Downloads/react-websocket-stock-app-master/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/niharika.singh/Downloads/react-websocket-stock-app-master/src/App.js\";\nimport React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport io from 'socket.io-client';\nimport StockList from './components/stock-list/StockList';\nimport './App.css';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      isWebsocketError: ''\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var SERVER_URL = 'ws://stocks.mnet.website';\n      var socket = new window.WebSocket(SERVER_URL);\n\n      socket.onopen = function (event) {\n        socket.send('Ping!');\n      };\n\n      socket.onmessage = function (event) {\n        _this2.props.receivedata(event.data);\n      };\n\n      socket.onerror = function (event) {\n        _this2.setState({\n          isWebsocketError: \"Something went wrong. Please refresh...\"\n        });\n      };\n\n      socket.onclose = function (event) {\n        _this2.setState({\n          isWebsocketError: \"Websockets are closed. Please check after some time\"\n        });\n      };\n      /* \n      var socketOptions = {\n        \"force new connection\": true,\n        \"reconnectionAttempts\": \"Infinity\", \n        \"timeout\": 100,                  \n        \"transports\": [\"websocket\"]\n      };\n      const socket = io.connect('ws://stocks.mnet.website', socketOptions);\n      socket.on('connect', function () {\n        console.log('inside connect')\n      });\n      socket.on('event', function (data) {\n        console.log('inside event', data)\n      });\n      socket.on('disconnect', function () {\n        console.log('inside disconnect')\n      }); \n      */\n\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, !this.state.isWebsocketError && React.createElement(StockList, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }), this.state.isWebsocketError && React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, this.state.isWebsocketError));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nvar mapDispatchToProps = function mapDispatchToProps(dispach) {\n  return {\n    receivedata: function receivedata(data) {\n      return dispach({\n        type: 'UPDATE',\n        payload: data\n      });\n    }\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(App);","map":{"version":3,"sources":["/Users/niharika.singh/Downloads/react-websocket-stock-app-master/src/App.js"],"names":["React","Component","connect","io","StockList","App","props","state","isWebsocketError","SERVER_URL","socket","window","WebSocket","onopen","event","send","onmessage","receivedata","data","onerror","setState","onclose","mapDispatchToProps","dispach","type","payload"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,EAAP,MAAe,kBAAf;AACA,OAAOC,SAAP,MAAsB,mCAAtB;AACA,OAAO,WAAP;;IAEMC,G;;;;;AACJ,eAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,6EAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AAAEC,MAAAA,gBAAgB,EAAE;AAApB,KAAb;AAFiB;AAGlB;;;;wCAEmB;AAAA;;AAClB,UAAMC,UAAU,GAAG,0BAAnB;AACA,UAAMC,MAAM,GAAG,IAAIC,MAAM,CAACC,SAAX,CAAqBH,UAArB,CAAf;;AAEAC,MAAAA,MAAM,CAACG,MAAP,GAAgB,UAACC,KAAD,EAAW;AACzBJ,QAAAA,MAAM,CAACK,IAAP,CAAY,OAAZ;AACD,OAFD;;AAIAL,MAAAA,MAAM,CAACM,SAAP,GAAmB,UAACF,KAAD,EAAW;AAC5B,QAAA,MAAI,CAACR,KAAL,CAAWW,WAAX,CAAuBH,KAAK,CAACI,IAA7B;AACD,OAFD;;AAIAR,MAAAA,MAAM,CAACS,OAAP,GAAiB,UAACL,KAAD,EAAW;AAC1B,QAAA,MAAI,CAACM,QAAL,CAAc;AAAEZ,UAAAA,gBAAgB,EAAE;AAApB,SAAd;AACD,OAFD;;AAIAE,MAAAA,MAAM,CAACW,OAAP,GAAiB,UAACP,KAAD,EAAW;AAC1B,QAAA,MAAI,CAACM,QAAL,CAAc;AAAEZ,UAAAA,gBAAgB,EAAE;AAApB,SAAd;AACD,OAFD;AAIA;;;;;;;;;;;;;;;;;;;AAkBD;;;6BACQ;AACP,aACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,CAAC,KAAKD,KAAL,CAAWC,gBAAZ,IACC,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,EAIG,KAAKD,KAAL,CAAWC,gBAAX,IACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAM,KAAKD,KAAL,CAAWC,gBAAjB,CALJ,CADF;AASD;;;;EAvDeP,S;;AA0DlB,IAAMqB,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,OAAD,EAAa;AACtC,SAAQ;AACNN,IAAAA,WAAW,EAAE,qBAACC,IAAD,EAAU;AACrB,aAAOK,OAAO,CAAC;AACbC,QAAAA,IAAI,EAAE,QADO;AAEbC,QAAAA,OAAO,EAAEP;AAFI,OAAD,CAAd;AAID;AANK,GAAR;AAQD,CATD;;AAUA,eAAehB,OAAO,CAAC,IAAD,EAAOoB,kBAAP,CAAP,CAAkCjB,GAAlC,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from \"react-redux\"\nimport io from 'socket.io-client';\nimport StockList from './components/stock-list/StockList';\nimport './App.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { isWebsocketError: '' };\n  }\n\n  componentDidMount() {\n    const SERVER_URL = 'ws://stocks.mnet.website';\n    const socket = new window.WebSocket(SERVER_URL);\n\n    socket.onopen = (event) => {\n      socket.send('Ping!');\n    };\n\n    socket.onmessage = (event) => {\n      this.props.receivedata(event.data);\n    };\n\n    socket.onerror = (event) => {\n      this.setState({ isWebsocketError: \"Something went wrong. Please refresh...\" });\n    };\n\n    socket.onclose = (event) => {\n      this.setState({ isWebsocketError: \"Websockets are closed. Please check after some time\" })\n    };\n\n    /* \n    var socketOptions = {\n      \"force new connection\": true,\n      \"reconnectionAttempts\": \"Infinity\", \n      \"timeout\": 100,                  \n      \"transports\": [\"websocket\"]\n    };\n    const socket = io.connect('ws://stocks.mnet.website', socketOptions);\n    socket.on('connect', function () {\n      console.log('inside connect')\n    });\n    socket.on('event', function (data) {\n      console.log('inside event', data)\n    });\n    socket.on('disconnect', function () {\n      console.log('inside disconnect')\n    }); \n    */\n  }\n  render() {\n    return (\n      <React.Fragment>\n        {!this.state.isWebsocketError &&\n          <StockList></StockList>\n        }\n        {this.state.isWebsocketError &&\n          <div>{this.state.isWebsocketError}</div>}\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispach) => {\n  return ({\n    receivedata: (data) => {\n      return dispach({\n        type: 'UPDATE',\n        payload: data\n      });\n    }\n  });\n}\nexport default connect(null, mapDispatchToProps)(App);"]},"metadata":{},"sourceType":"module"}